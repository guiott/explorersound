;;*****************************************************************************
;;*****************************************************************************
;;  FILENAME: BPF4_4KHz.asm
;;  Version: 1.0, Updated on 2009/10/15 at 17:11:37
;;  Generated by PSoC Designer 5.0.1127.0
;;
;;  DESCRIPTION: Asm source for 4 Pole Band Pass Filter
;;
;;  NOTE: User Module APIs conform to the fastcall16 convention for marshalling
;;        arguments and observe the associated "Registers are volatile" policy.
;;        This means it is the caller's responsibility to preserve any values
;;        in the X and A registers that are still needed after the API functions
;;        returns. For Large Memory Model devices it is also the caller's 
;;        responsibility to perserve any value in the CUR_PP, IDX_PP, MVR_PP and 
;;        MVW_PP registers. Even though some of these registers may not be modified
;;        now, there is no guarantee that will remain the case in future releases.
;;-----------------------------------------------------------------------------
;;  Copyright (c) Cypress Semiconductor 2009. All Rights Reserved.
;;*****************************************************************************
;;*****************************************************************************

include "m8c.inc"
include "memory.inc"
include "BPF4_4KHz.inc"

;-----------------------------------------------
;  Global Symbols
;-----------------------------------------------
export  BPF4_4KHz_Start
export _BPF4_4KHz_Start
export  BPF4_4KHz_SetPower
export _BPF4_4KHz_SetPower
export  BPF4_4KHz_Stop
export _BPF4_4KHz_Stop

export  BPF4_4KHz_SetC1L
export _BPF4_4KHz_SetC1L
export  BPF4_4KHz_SetC2L
export _BPF4_4KHz_SetC2L
export  BPF4_4KHz_SetC3L
export _BPF4_4KHz_SetC3L
export  BPF4_4KHz_SetC4L
export _BPF4_4KHz_SetC4L

export  BPF4_4KHz_SetC1H
export _BPF4_4KHz_SetC1H
export  BPF4_4KHz_SetC2H
export _BPF4_4KHz_SetC2H
export  BPF4_4KHz_SetC3H
export _BPF4_4KHz_SetC3H
export  BPF4_4KHz_SetC4H
export _BPF4_4KHz_SetC4H

;-----------------------------------------------
;  EQUATES
;-----------------------------------------------
BPF4_4KHz_POWERMASK:    equ 03h                  ; Power field mask for CR3
BPF4_4KHz_CNUMMASK:     equ 1fh                  ; Mask for A, B & C Caps

BPF4_4KHz_IfCond:       equ BPF4_4KHz_AMD_MSK & 0x01

IF (BPF4_4KHz_AMD_VAL)
 IF (BPF4_4KHz_IfCond)
  BPF4_4KHz_AMD:        equ BPF4_4KHz_AMD_VAL
 ELSE
  BPF4_4KHz_AMD:        equ BPF4_4KHz_AMD_VAL << 4
 ENDIF
ENDIF

AREA UserModules (ROM,REL)

.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: BPF4_4KHz_Start
;
;  DESCRIPTION: Applies power setting to the module's PSoC blocks
;-----------------------------------------------------------------------------
;  ARGUMENTS:    A register contains the power setting (constant)
;  RETURNS:      Nothing
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.


 BPF4_4KHz_Start:
_BPF4_4KHz_Start:
 BPF4_4KHz_SetPower:
_BPF4_4KHz_SetPower:
   RAM_PROLOGUE RAM_USE_CLASS_2
   and   A, BPF4_4KHz_POWERMASK                  ; mask A to protect unchanged bits
   mov   X, SP                                   ; define temp store location
   push  A                                       ; put power value in temp store

IF (BPF4_4KHz_AMD_VAL)
   M8C_SetBank1
   mov   A, reg[BPF4_4KHz_AMD_REG]               ; read modulator register
   and   A, ~BPF4_4KHz_AMD_MSK                   ; clear modulator bittfield in A
   or    A, BPF4_4KHz_AMD                        ; combine modulator value with balance of register
   mov   reg[BPF4_4KHz_AMD_REG], A               ; move complete value back to register
   M8C_SetBank0
ENDIF
   
   mov   A, reg[BPF4_4KHz_FLINL_CR3]             ; read power value
   and   A, ~BPF4_4KHz_POWERMASK                 ; clear power bits in A
   or    A, [X]                                  ; combine power value with balance of reg.
   mov   reg[BPF4_4KHz_FLINL_CR3], A             ; move complete value back to register

   mov   A, reg[BPF4_4KHz_FLFBL_CR3]             ; read power value
   and   A, ~BPF4_4KHz_POWERMASK                 ; clear power bits in A
   or    A, [X]                                  ; combine power value with balance of reg.
   mov   reg[BPF4_4KHz_FLFBL_CR3], A             ; move complete value back to register

   mov   A, reg[BPF4_4KHz_FLINH_CR3]             ; read power value
   and   A, ~BPF4_4KHz_POWERMASK                 ; clear power bits in A
   or    A, [X]                                  ; combine power value with balance of reg.
   mov   reg[BPF4_4KHz_FLINH_CR3], A             ; move complete value back to register

   mov   A, reg[BPF4_4KHz_FLFBH_CR3]             ; read power value
   and   A, ~BPF4_4KHz_POWERMASK                 ; clear power bits in A
   or    A, [X]                                  ; combine power value with balance of reg.
   mov   reg[BPF4_4KHz_FLFBH_CR3], A             ; move complete value back to register

   pop   A
   RAM_EPILOGUE RAM_USE_CLASS_2
   ret
.ENDSECTION

.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: BPF4_4KHz_Stop
;
;  DESCRIPTION: Cuts power to the user module.
;-----------------------------------------------------------------------------
;  ARGUMENTS:     None
;  RETURNS:       Nothing
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.

 BPF4_4KHz_Stop:
_BPF4_4KHz_Stop:
   RAM_PROLOGUE RAM_USE_CLASS_1
   and   reg[BPF4_4KHz_FLINL_CR3], ~BPF4_4KHz_POWERMASK
   and   reg[BPF4_4KHz_FLFBL_CR3], ~BPF4_4KHz_POWERMASK
   and   reg[BPF4_4KHz_FLINH_CR3], ~BPF4_4KHz_POWERMASK
   and   reg[BPF4_4KHz_FLFBH_CR3], ~BPF4_4KHz_POWERMASK
   RAM_EPILOGUE RAM_USE_CLASS_1
   ret
.ENDSECTION

.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: BPF4_4KHz_SetC1L
;
;  DESCRIPTION:   Alters the filter transfer function by modifying the value
;                 of the capacitor C1L
;-----------------------------------------------------------------------------
;  ARGUMENTS:    The A register contains a non-negative integer less than 32
;  RETURNS:
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.

 BPF4_4KHz_SetC1L:
_BPF4_4KHz_SetC1L:
   RAM_PROLOGUE RAM_USE_CLASS_2
   and   A, BPF4_4KHz_CNUMMASK                   ; mask A to protect unchanged bits
   mov   X, SP                                   ; define temp store location
   push  A                                       ; put C1L value in temp store
   mov   A, reg[BPF4_4KHz_FILT_C1L_REG]          ; read current C1L
   and   A, ~BPF4_4KHz_CNUMMASK                  ; clear C1L bits in A
   or    A, [X]                                  ; combine C1L value with balance of reg.
   mov   reg[BPF4_4KHz_FILT_C1L_REG], A          ; move complete value back to register
   pop   A
   RAM_EPILOGUE RAM_USE_CLASS_2
   ret
.ENDSECTION
   
.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: BPF4_4KHz_SetC2L
;
;  DESCRIPTION:   Alters the filter transfer function by modifying the value
;                 of the capacitor C2L
;-----------------------------------------------------------------------------
;  ARGUMENTS:    The A register contains a non-negative integer less than 32
;  RETURNS:
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.

 BPF4_4KHz_SetC2L:
_BPF4_4KHz_SetC2L:
   RAM_PROLOGUE RAM_USE_CLASS_2
   and   A, BPF4_4KHz_CNUMMASK                   ; mask A to protect unchanged bits
   mov   X, SP                                   ; define temp store location
   push  A                                       ; put C2L value in temp store
   mov   A, reg[BPF4_4KHz_FILT_C2L_REG]          ; read current C2L
   and   A, ~BPF4_4KHz_CNUMMASK                  ; clear C2L bits in A
   or    A, [X]                                  ; combine C2L value with balance of reg.
   mov   reg[BPF4_4KHz_FILT_C2L_REG], A          ; move complete value back to register
   pop   A
   RAM_EPILOGUE RAM_USE_CLASS_2
   ret
.ENDSECTION
   
.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: BPF4_4KHz_SetC3L
;
;  DESCRIPTION:   Alters the filter transfer function by modifying the value
;                 of the capacitor C3L
;-----------------------------------------------------------------------------
;  ARGUMENTS:    The A register contains a non-negative integer less than 32
;  RETURNS:
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
   
 BPF4_4KHz_SetC3L:
_BPF4_4KHz_SetC3L:
   RAM_PROLOGUE RAM_USE_CLASS_2
   and   A, BPF4_4KHz_CNUMMASK                   ; mask A to protect unchanged bits
   mov   X, SP                                   ; define temp store location
   push  A                                       ; put C3L value in temp store
   mov   A, reg[BPF4_4KHz_FILT_C3L_REG]          ; read current C3L
   and   A, ~BPF4_4KHz_CNUMMASK                  ; clear C3L bits in A
   or    A, [X]                                  ; combine C3L value with balance of reg.
   mov   reg[BPF4_4KHz_FILT_C3L_REG], A          ; move complete value back to register
   pop   A
   RAM_EPILOGUE RAM_USE_CLASS_2
   ret
.ENDSECTION
   
.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: BPF4_4KHz_SetC4L
;
;  DESCRIPTION:   Alters the filter transfer function by modifying the value
;                 of the capacitor C4L
;-----------------------------------------------------------------------------
;  ARGUMENTS:    The A register contains a non-negative integer less than 32
;  RETURNS:
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions. 

 BPF4_4KHz_SetC4L:
_BPF4_4KHz_SetC4L:
   RAM_PROLOGUE RAM_USE_CLASS_2
   and   A, BPF4_4KHz_CNUMMASK                   ; mask A to protect unchanged bits
   mov   X, SP                                   ; define temp store location
   push  A                                       ; put C4L value in temp store
   mov   A, reg[BPF4_4KHz_FILT_C4L_REG]          ; read current C4L
   and   A, ~BPF4_4KHz_CNUMMASK                  ; clear C4L bits in A
   or    A, [X]                                  ; combine C4L value with balance of reg.
   mov   reg[BPF4_4KHz_FILT_C4L_REG], A          ; move complete value back to register
   pop   A
   RAM_EPILOGUE RAM_USE_CLASS_2
   ret
.ENDSECTION 
  
.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: BPF4_4KHz_SetC1H
;
;  DESCRIPTION:   Alters the filter transfer function by modifying the value
;                 of the capacitor C1H
;-----------------------------------------------------------------------------
;  ARGUMENTS:    The A register contains a non-negative integer less than 32
;  RETURNS:
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.

 BPF4_4KHz_SetC1H:
_BPF4_4KHz_SetC1H:
   RAM_PROLOGUE RAM_USE_CLASS_2
   and   A, BPF4_4KHz_CNUMMASK                   ; mask A to protect unchanged bits
   mov   X, SP                                   ; define temp store location
   push  A                                       ; put C1H value in temp store
   mov   A, reg[BPF4_4KHz_FILT_C1H_REG]          ; read current C1H
   and   A, ~BPF4_4KHz_CNUMMASK                  ; clear C1H bits in A
   or    A, [X]                                  ; combine C1H value with balance of reg.
   mov   reg[BPF4_4KHz_FILT_C1H_REG], A          ; move complete value back to register
   pop   A
   RAM_EPILOGUE RAM_USE_CLASS_2
   ret
.ENDSECTION
   
.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: BPF4_4KHz_SetC2H
;
;  DESCRIPTION:   Alters the filter transfer function by modifying the value
;                 of the capacitor C2H
;-----------------------------------------------------------------------------
;  ARGUMENTS:    The A register contains a non-negative integer less than 32
;  RETURNS:
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
   
 BPF4_4KHz_SetC2H:
_BPF4_4KHz_SetC2H:
   RAM_PROLOGUE RAM_USE_CLASS_2
   and   A, BPF4_4KHz_CNUMMASK                   ; mask A to protect unchanged bits
   mov   X, SP                                   ; define temp store location
   push  A                                       ; put C2H value in temp store
   mov   A, reg[BPF4_4KHz_FILT_C2H_REG]          ; read current C2H
   and   A, ~BPF4_4KHz_CNUMMASK                  ; clear C2H bits in A
   or    A, [X]                                  ; combine C2H value with balance of reg.
   mov   reg[BPF4_4KHz_FILT_C2H_REG], A          ; move complete value back to register
   pop   A
   RAM_EPILOGUE RAM_USE_CLASS_2
   ret
.ENDSECTION
   
.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: BPF4_4KHz_SetC3H
;
;  DESCRIPTION:   Alters the filter transfer function by modifying the value
;                 of the capacitor C3H
;-----------------------------------------------------------------------------
;  ARGUMENTS:    The A register contains a non-negative integer less than 32
;  RETURNS:
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
   
 BPF4_4KHz_SetC3H:
_BPF4_4KHz_SetC3H:
   RAM_PROLOGUE RAM_USE_CLASS_2
   and   A, BPF4_4KHz_CNUMMASK                   ; mask A to protect unchanged bits
   mov   X, SP                                   ; define temp store location
   push  A                                       ; put C3H value in temp store
   mov   A, reg[BPF4_4KHz_FILT_C3H_REG]          ; read current C3H
   and   A, ~BPF4_4KHz_CNUMMASK                  ; clear C3H bits in A
   or    A, [X]                                  ; combine C3H value with balance of reg.
   mov   reg[BPF4_4KHz_FILT_C3H_REG], A          ; move complete value back to register
   pop   A
   RAM_EPILOGUE RAM_USE_CLASS_2
   ret
.ENDSECTION
   
.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: BPF4_4KHz_SetC4H
;
;  DESCRIPTION:   Alters the filter transfer function by modifying the value
;                 of the capacitor C4H
;-----------------------------------------------------------------------------
;  ARGUMENTS:    The A register contains a non-negative integer less than 32
;  RETURNS:
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
   
 BPF4_4KHz_SetC4H:
_BPF4_4KHz_SetC4H:
   RAM_PROLOGUE RAM_USE_CLASS_2
   and   A, BPF4_4KHz_CNUMMASK                   ; mask A to protect unchanged bits
   mov   X, SP                                   ; define temp store location
   push  A                                       ; put C4H value in temp store
   mov   A, reg[BPF4_4KHz_FILT_C4H_REG]          ; read current C4H
   and   A, ~BPF4_4KHz_CNUMMASK                  ; clear C4H bits in A
   or    A, [X]                                  ; combine C4H value with balance of reg.
   mov   reg[BPF4_4KHz_FILT_C4H_REG], A          ; move complete value back to register
   pop   A
   RAM_EPILOGUE RAM_USE_CLASS_2
   ret
.ENDSECTION

; End of File BPF4_4KHz.asm
