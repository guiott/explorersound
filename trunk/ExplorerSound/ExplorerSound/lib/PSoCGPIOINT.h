/******************************************************************************
*  Generated by PSoC Designer 5.0.1127.0
******************************************************************************/
#include <m8c.h>
// AGND address and mask defines
#pragma	ioport	AGND_Data_ADDR:	0x0
BYTE			AGND_Data_ADDR;
#pragma	ioport	AGND_DriveMode_0_ADDR:	0x100
BYTE			AGND_DriveMode_0_ADDR;
#pragma	ioport	AGND_DriveMode_1_ADDR:	0x101
BYTE			AGND_DriveMode_1_ADDR;
#pragma	ioport	AGND_DriveMode_2_ADDR:	0x3
BYTE			AGND_DriveMode_2_ADDR;
#pragma	ioport	AGND_GlobalSelect_ADDR:	0x2
BYTE			AGND_GlobalSelect_ADDR;
#pragma	ioport	AGND_IntCtrl_0_ADDR:	0x102
BYTE			AGND_IntCtrl_0_ADDR;
#pragma	ioport	AGND_IntCtrl_1_ADDR:	0x103
BYTE			AGND_IntCtrl_1_ADDR;
#pragma	ioport	AGND_IntEn_ADDR:	0x1
BYTE			AGND_IntEn_ADDR;
#define AGND_MASK 0x4
// AnalogOutBuf_0 address and mask defines
#pragma	ioport	AnalogOutBuf_0_Data_ADDR:	0x0
BYTE			AnalogOutBuf_0_Data_ADDR;
#pragma	ioport	AnalogOutBuf_0_DriveMode_0_ADDR:	0x100
BYTE			AnalogOutBuf_0_DriveMode_0_ADDR;
#pragma	ioport	AnalogOutBuf_0_DriveMode_1_ADDR:	0x101
BYTE			AnalogOutBuf_0_DriveMode_1_ADDR;
#pragma	ioport	AnalogOutBuf_0_DriveMode_2_ADDR:	0x3
BYTE			AnalogOutBuf_0_DriveMode_2_ADDR;
#pragma	ioport	AnalogOutBuf_0_GlobalSelect_ADDR:	0x2
BYTE			AnalogOutBuf_0_GlobalSelect_ADDR;
#pragma	ioport	AnalogOutBuf_0_IntCtrl_0_ADDR:	0x102
BYTE			AnalogOutBuf_0_IntCtrl_0_ADDR;
#pragma	ioport	AnalogOutBuf_0_IntCtrl_1_ADDR:	0x103
BYTE			AnalogOutBuf_0_IntCtrl_1_ADDR;
#pragma	ioport	AnalogOutBuf_0_IntEn_ADDR:	0x1
BYTE			AnalogOutBuf_0_IntEn_ADDR;
#define AnalogOutBuf_0_MASK 0x8
// AnalogOutBuf_2 address and mask defines
#pragma	ioport	AnalogOutBuf_2_Data_ADDR:	0x0
BYTE			AnalogOutBuf_2_Data_ADDR;
#pragma	ioport	AnalogOutBuf_2_DriveMode_0_ADDR:	0x100
BYTE			AnalogOutBuf_2_DriveMode_0_ADDR;
#pragma	ioport	AnalogOutBuf_2_DriveMode_1_ADDR:	0x101
BYTE			AnalogOutBuf_2_DriveMode_1_ADDR;
#pragma	ioport	AnalogOutBuf_2_DriveMode_2_ADDR:	0x3
BYTE			AnalogOutBuf_2_DriveMode_2_ADDR;
#pragma	ioport	AnalogOutBuf_2_GlobalSelect_ADDR:	0x2
BYTE			AnalogOutBuf_2_GlobalSelect_ADDR;
#pragma	ioport	AnalogOutBuf_2_IntCtrl_0_ADDR:	0x102
BYTE			AnalogOutBuf_2_IntCtrl_0_ADDR;
#pragma	ioport	AnalogOutBuf_2_IntCtrl_1_ADDR:	0x103
BYTE			AnalogOutBuf_2_IntCtrl_1_ADDR;
#pragma	ioport	AnalogOutBuf_2_IntEn_ADDR:	0x1
BYTE			AnalogOutBuf_2_IntEn_ADDR;
#define AnalogOutBuf_2_MASK 0x10
// Connect_BPF4_FinalStage_PGA address and mask defines
#pragma	ioport	Connect_BPF4_FinalStage_PGA_Data_ADDR:	0x0
BYTE			Connect_BPF4_FinalStage_PGA_Data_ADDR;
#pragma	ioport	Connect_BPF4_FinalStage_PGA_DriveMode_0_ADDR:	0x100
BYTE			Connect_BPF4_FinalStage_PGA_DriveMode_0_ADDR;
#pragma	ioport	Connect_BPF4_FinalStage_PGA_DriveMode_1_ADDR:	0x101
BYTE			Connect_BPF4_FinalStage_PGA_DriveMode_1_ADDR;
#pragma	ioport	Connect_BPF4_FinalStage_PGA_DriveMode_2_ADDR:	0x3
BYTE			Connect_BPF4_FinalStage_PGA_DriveMode_2_ADDR;
#pragma	ioport	Connect_BPF4_FinalStage_PGA_GlobalSelect_ADDR:	0x2
BYTE			Connect_BPF4_FinalStage_PGA_GlobalSelect_ADDR;
#pragma	ioport	Connect_BPF4_FinalStage_PGA_IntCtrl_0_ADDR:	0x102
BYTE			Connect_BPF4_FinalStage_PGA_IntCtrl_0_ADDR;
#pragma	ioport	Connect_BPF4_FinalStage_PGA_IntCtrl_1_ADDR:	0x103
BYTE			Connect_BPF4_FinalStage_PGA_IntCtrl_1_ADDR;
#pragma	ioport	Connect_BPF4_FinalStage_PGA_IntEn_ADDR:	0x1
BYTE			Connect_BPF4_FinalStage_PGA_IntEn_ADDR;
#define Connect_BPF4_FinalStage_PGA_MASK 0x20
// AnalogColumn_InputMUX_3 address and mask defines
#pragma	ioport	AnalogColumn_InputMUX_3_Data_ADDR:	0x0
BYTE			AnalogColumn_InputMUX_3_Data_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_3_DriveMode_0_ADDR:	0x100
BYTE			AnalogColumn_InputMUX_3_DriveMode_0_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_3_DriveMode_1_ADDR:	0x101
BYTE			AnalogColumn_InputMUX_3_DriveMode_1_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_3_DriveMode_2_ADDR:	0x3
BYTE			AnalogColumn_InputMUX_3_DriveMode_2_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_3_GlobalSelect_ADDR:	0x2
BYTE			AnalogColumn_InputMUX_3_GlobalSelect_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_3_IntCtrl_0_ADDR:	0x102
BYTE			AnalogColumn_InputMUX_3_IntCtrl_0_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_3_IntCtrl_1_ADDR:	0x103
BYTE			AnalogColumn_InputMUX_3_IntCtrl_1_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_3_IntEn_ADDR:	0x1
BYTE			AnalogColumn_InputMUX_3_IntEn_ADDR;
#define AnalogColumn_InputMUX_3_MASK 0x40
// I2CHWSDA address and mask defines
#pragma	ioport	I2CHWSDA_Data_ADDR:	0x4
BYTE			I2CHWSDA_Data_ADDR;
#pragma	ioport	I2CHWSDA_DriveMode_0_ADDR:	0x104
BYTE			I2CHWSDA_DriveMode_0_ADDR;
#pragma	ioport	I2CHWSDA_DriveMode_1_ADDR:	0x105
BYTE			I2CHWSDA_DriveMode_1_ADDR;
#pragma	ioport	I2CHWSDA_DriveMode_2_ADDR:	0x7
BYTE			I2CHWSDA_DriveMode_2_ADDR;
#pragma	ioport	I2CHWSDA_GlobalSelect_ADDR:	0x6
BYTE			I2CHWSDA_GlobalSelect_ADDR;
#pragma	ioport	I2CHWSDA_IntCtrl_0_ADDR:	0x106
BYTE			I2CHWSDA_IntCtrl_0_ADDR;
#pragma	ioport	I2CHWSDA_IntCtrl_1_ADDR:	0x107
BYTE			I2CHWSDA_IntCtrl_1_ADDR;
#pragma	ioport	I2CHWSDA_IntEn_ADDR:	0x5
BYTE			I2CHWSDA_IntEn_ADDR;
#define I2CHWSDA_MASK 0x20
// I2CHWSCL address and mask defines
#pragma	ioport	I2CHWSCL_Data_ADDR:	0x4
BYTE			I2CHWSCL_Data_ADDR;
#pragma	ioport	I2CHWSCL_DriveMode_0_ADDR:	0x104
BYTE			I2CHWSCL_DriveMode_0_ADDR;
#pragma	ioport	I2CHWSCL_DriveMode_1_ADDR:	0x105
BYTE			I2CHWSCL_DriveMode_1_ADDR;
#pragma	ioport	I2CHWSCL_DriveMode_2_ADDR:	0x7
BYTE			I2CHWSCL_DriveMode_2_ADDR;
#pragma	ioport	I2CHWSCL_GlobalSelect_ADDR:	0x6
BYTE			I2CHWSCL_GlobalSelect_ADDR;
#pragma	ioport	I2CHWSCL_IntCtrl_0_ADDR:	0x106
BYTE			I2CHWSCL_IntCtrl_0_ADDR;
#pragma	ioport	I2CHWSCL_IntCtrl_1_ADDR:	0x107
BYTE			I2CHWSCL_IntCtrl_1_ADDR;
#pragma	ioport	I2CHWSCL_IntEn_ADDR:	0x5
BYTE			I2CHWSCL_IntEn_ADDR;
#define I2CHWSCL_MASK 0x80
